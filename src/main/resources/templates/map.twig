{% extends 'base.twig' %}

{% block content %}


        <style>
            /* Always set the map height explicitly to define the size of the div
             * element that contains the map. */
            #map {
                height: 100%;
            }
            /* Optional: Makes the sample page fill the window. */
            html, body {
                height: 100%;
                margin: 0;
                padding: 0;
            }

            .container-fluid {
                margin-top: 20px;
            }
        </style>

    <div class="container-fluid">
        <div class="row">
            <div class="col" style="height: 500px">
                <div id="map"></div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <select class="mdb-select colorful-select dropdown-primary">
                    <option value="1">January</option>
                    <option value="2">February</option>
                    <option value="3">March</option>
                    <option value="4">April</option>
                    <option value="5">May</option>
                </select>
                <label>Select Month</label>
            </div>
        </div>
    </div>
    <script>
        var map;
        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 3,
                center: {lat: 56.1304, lng: 106.3468},
                mapTypeId: 'terrain'
            });

            // Create a <script> tag and set the USGS URL as the source.
            var script = document.createElement('script');

            // This example uses a local copy of the GeoJSON stored at
            // http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_week.geojsonp
            script.src = 'https://developers.google.com/maps/documentation/javascript/examples/json/earthquake_GeoJSONP.js';
            document.getElementsByTagName('head')[0].appendChild(script);

        }

        function eqfeed_callback(results) {
            var heatmapData = [];
            for (var i = 0; i < results.features.length; i++) {
                var coords = results.features[i].geometry.coordinates;
                var latLng = new google.maps.LatLng(coords[1], coords[0]);
                heatmapData.push(latLng);
            }
            var heatmap = new google.maps.visualization.HeatmapLayer({
                data: heatmapData,
                dissipating: false,
                map: map
            });
        }
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCvAuBdVZjDGb0-C8kxFVbeSM50bkgtni8&libraries=visualization&callback=initMap">
    </script>

{% endblock %}